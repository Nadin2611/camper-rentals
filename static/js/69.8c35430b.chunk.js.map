{"version":3,"file":"static/js/69.8c35430b.chunk.js","mappings":"+PAoJA,UA3DoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAAsCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAgDL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAAwCT,EAAAA,EAAAA,WAAS,GAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA0Cb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAChCG,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAeC,EAAAA,EAAAA,QAAO,MAEtBC,GAAUJ,EAAAA,EAAAA,IAAYK,EAAAA,IACtBC,GAAYN,EAAAA,EAAAA,IAAYO,EAAAA,IACxBC,GAAQR,EAAAA,EAAAA,IAAYS,EAAAA,IAEpBC,GAAYC,EAAAA,EAAAA,IAAmBP,GAErCQ,QAAQC,IAAIH,IACZI,EAAAA,EAAAA,YAAU,WACRnC,GAASoC,EAAAA,EAAAA,GAAW9B,GACtB,GAAG,CAACN,EAAUM,KAEd6B,EAAAA,EAAAA,YAAU,WACJV,EAAQY,OAAS,IACnB1B,GAAoB,SAAA2B,GAAW,SAAAC,QAAAC,EAAAA,EAAAA,GAAQF,IAAWE,EAAAA,EAAAA,GAAKf,GAAO,IAC9DN,GAAiB,GAErB,GAAG,CAACM,IAYJ,OACEgB,EAAAA,EAAAA,MAACC,EAAAA,GAAoB,CAAAC,SAAA,EACnBC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACPJ,EAAAA,EAAAA,MAACK,EAAAA,GAAO,CAACC,IAAKxB,EAAaoB,SAAA,EACzBC,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACvB,QAASf,IAEpBI,IAAiBe,IAChBe,EAAAA,EAAAA,KAACK,EAAAA,EAAW,CACVC,KAAK,SACLC,QAnBa,WACjB7C,GAAec,EACjBL,GAAgB,IAGlBI,GAAiB,GACjBZ,GAAe,SAAA6C,GAAQ,OAAIA,EAAW,CAAC,KACvCC,EAAAA,EAAAA,IAAa9B,EAAa+B,SAC5B,EAYUC,SAAUrC,EAAcyB,SAEvBzB,EAAgB,aAAe,cAGnCS,IAAaiB,EAAAA,EAAAA,KAACY,EAAAA,EAAM,IACpB3B,IAASY,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,UAAQd,UAI7B,C","sources":["pages/CatalogPage.jsx"],"sourcesContent":["// import { useEffect, useState, useRef } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getAdverts } from '../redux/adverts/operations';\n// import {\n//   selectAdverts,\n//   selectAdvertsError,\n//   selectAdvertsLoading,\n//   selectTotalPages,\n// } from '../redux/adverts/selectors';\n// import { getUniqueLocations, handleScroll } from '../services';\n\n// import AdvertList from 'components/AdvertCatalog/AdvertList';\n// import {\n//   CatalogPageContainer,\n//   Wrapper,\n// } from 'components/Container/Container.styled';\n// import Filter from 'components/Filter';\n// import Loader from 'components/Loader';\n// import { LoadMoreBtn } from 'components/Button/Button.styled';\n\n// const CatalogPage = () => {\n//   const dispatch = useDispatch();\n//   const adverts = useSelector(selectAdverts);\n//   const isLoading = useSelector(selectAdvertsLoading);\n//   const error = useSelector(selectAdvertsError);\n//   const totalPage = useSelector(selectTotalPages);\n//   const containerRef = useRef(null);\n//   const [page, setPage] = useState(1);\n//   const [showLoadMore, setShowLoadMore] = useState(true);\n\n//   const locations = getUniqueLocations(adverts);\n\n//   useEffect(() => {\n//     if (page >= totalPage) {\n//       setShowLoadMore(false);\n//     }\n//     dispatch(getAdverts(page));\n//   }, [dispatch, page, totalPage]);\n\n//   const handleLoadMore = event => {\n//     event.preventDefault();\n//     if (page >= totalPage || adverts.length < 4) {\n//       setShowLoadMore(false);\n//       return;\n//     }\n//     setPage(prevPage => prevPage + 1);\n//     handleScroll(containerRef.current);\n//   };\n\n//   return isLoading ? (\n//     <Loader />\n//   ) : (\n//     <CatalogPageContainer>\n//       <Filter locations={locations} />\n//       <Wrapper ref={containerRef}>\n//         <AdvertList adverts={adverts} />\n\n//         {showLoadMore && !error && adverts.length > 0 && (\n//           <LoadMoreBtn type=\"button\" onClick={handleLoadMore}>\n//             Load more\n//           </LoadMoreBtn>\n//         )}\n//       </Wrapper>\n//     </CatalogPageContainer>\n//   );\n// };\n\n// export default CatalogPage;\n\nimport { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAdverts } from '../redux/adverts/operations';\nimport {\n  selectAdverts,\n  selectAdvertsError,\n  selectAdvertsLoading,\n  selectTotalPages,\n} from '../redux/adverts/selectors';\nimport { getUniqueLocations, handleScroll } from '../services';\n\nimport AdvertList from 'components/AdvertCatalog/AdvertList';\nimport {\n  CatalogPageContainer,\n  Wrapper,\n} from 'components/Container/Container.styled';\nimport Filter from 'components/Filter';\nimport Loader from 'components/Loader';\nimport { LoadMoreBtn } from 'components/Button/Button.styled';\n\nconst CatalogPage = () => {\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [displayedAdverts, setDisplayedAdverts] = useState([]);\n  const [showLoadMore, setShowLoadMore] = useState(true);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const totalPage = useSelector(selectTotalPages);\n  const containerRef = useRef(null);\n\n  const adverts = useSelector(selectAdverts);\n  const isLoading = useSelector(selectAdvertsLoading);\n  const error = useSelector(selectAdvertsError);\n\n  const locations = getUniqueLocations(adverts);\n\n  console.log(locations);\n  useEffect(() => {\n    dispatch(getAdverts(currentPage));\n  }, [dispatch, currentPage]);\n\n  useEffect(() => {\n    if (adverts.length > 0) {\n      setDisplayedAdverts(prevAdverts => [...prevAdverts, ...adverts]);\n      setIsLoadingMore(false);\n    }\n  }, [adverts]);\n\n  const handleLoadMore = () => {\n    if (currentPage >= totalPage) {\n      setShowLoadMore(false);\n      return;\n    }\n    setIsLoadingMore(true);\n    setCurrentPage(prevPage => prevPage + 1);\n    handleScroll(containerRef.current);\n  };\n\n  return (\n    <CatalogPageContainer>\n      <Filter />\n      <Wrapper ref={containerRef}>\n        <AdvertList adverts={displayedAdverts} />\n\n        {showLoadMore && !error && (\n          <LoadMoreBtn\n            type=\"button\"\n            onClick={handleLoadMore}\n            disabled={isLoadingMore}\n          >\n            {isLoadingMore ? 'Loading...' : 'Load more'}\n          </LoadMoreBtn>\n        )}\n        {isLoading && <Loader />}\n        {error && <p>Error: {error}</p>}\n      </Wrapper>\n    </CatalogPageContainer>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","displayedAdverts","setDisplayedAdverts","_useState5","_useState6","showLoadMore","setShowLoadMore","_useState7","_useState8","isLoadingMore","setIsLoadingMore","totalPage","useSelector","selectTotalPages","containerRef","useRef","adverts","selectAdverts","isLoading","selectAdvertsLoading","error","selectAdvertsError","locations","getUniqueLocations","console","log","useEffect","getAdverts","length","prevAdverts","concat","_toConsumableArray","_jsxs","CatalogPageContainer","children","_jsx","Filter","Wrapper","ref","AdvertList","LoadMoreBtn","type","onClick","prevPage","handleScroll","current","disabled","Loader"],"sourceRoot":""}