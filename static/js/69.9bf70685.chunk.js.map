{"version":3,"file":"static/js/69.9bf70685.chunk.js","mappings":"qPAoEA,UAhDoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IAEpBC,GAAeC,EAAAA,EAAAA,QAAO,MAE5BC,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAwCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BG,GAAYC,EAAAA,EAAAA,IAAmBpB,GAC/BqB,GAAYpB,EAAAA,EAAAA,IAAYqB,EAAAA,KAE9BC,EAAAA,EAAAA,YAAU,WACJV,GAAQQ,GACVH,GAAgB,GAElBpB,GAAS0B,EAAAA,EAAAA,GAAWX,GACtB,GAAG,CAACf,EAAUe,EAAMQ,IAWpB,OAAOlB,GACLsB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAEPC,EAAAA,EAAAA,MAACC,EAAAA,GAAoB,CAAAC,SAAA,EACnBJ,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACX,UAAWA,KACnBQ,EAAAA,EAAAA,MAACI,EAAAA,GAAO,CAACC,IAAKzB,EAAasB,SAAA,EACzBJ,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACjC,QAASA,IAEpBiB,IAAiBZ,GAASL,EAAQkC,OAAS,IAC1CT,EAAAA,EAAAA,KAACU,EAAAA,EAAW,CAACC,KAAK,SAASC,QAlBZ,WACjBxB,GAAQQ,GAAarB,EAAQkC,OAAS,EACxChB,GAAgB,IAGlBJ,GAAQ,SAAAwB,GAAQ,OAAIA,EAAW,CAAC,KAChCC,EAAAA,EAAAA,IAAahC,EAAaiC,SAC5B,EAW2DX,SAAC,mBAO9D,C","sources":["pages/CatalogPage.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAdverts } from '../redux/adverts/operations';\nimport {\n  selectAdverts,\n  selectAdvertsError,\n  selectAdvertsLoading,\n  selectTotalPages,\n} from '../redux/adverts/selectors';\nimport { getUniqueLocations, handleScroll } from '../services';\n\nimport AdvertList from 'components/AdvertCatalog/AdvertList';\nimport {\n  CatalogPageContainer,\n  Wrapper,\n} from 'components/Container/Container.styled';\nimport Filter from 'components/Filter';\nimport Loader from 'components/Loader';\nimport { LoadMoreBtn } from 'components/Button/Button.styled';\n\nconst CatalogPage = () => {\n  const dispatch = useDispatch();\n  const adverts = useSelector(selectAdverts);\n  const isLoading = useSelector(selectAdvertsLoading);\n  const error = useSelector(selectAdvertsError);\n\n  const containerRef = useRef(null);\n\n  const [page, setPage] = useState(1);\n  const [showLoadMore, setShowLoadMore] = useState(true);\n\n  const locations = getUniqueLocations(adverts);\n  const totalPage = useSelector(selectTotalPages);\n\n  useEffect(() => {\n    if (page >= totalPage) {\n      setShowLoadMore(false);\n    }\n    dispatch(getAdverts(page));\n  }, [dispatch, page, totalPage]);\n\n  const handleLoadMore = () => {\n    if (page >= totalPage || adverts.length < 4) {\n      setShowLoadMore(false);\n      return;\n    }\n    setPage(prevPage => prevPage + 1);\n    handleScroll(containerRef.current);\n  };\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <CatalogPageContainer>\n      <Filter locations={locations} />\n      <Wrapper ref={containerRef}>\n        <AdvertList adverts={adverts} />\n\n        {showLoadMore && !error && adverts.length > 0 && (\n          <LoadMoreBtn type=\"button\" onClick={handleLoadMore}>\n            Load more\n          </LoadMoreBtn>\n        )}\n      </Wrapper>\n    </CatalogPageContainer>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["dispatch","useDispatch","adverts","useSelector","selectAdverts","isLoading","selectAdvertsLoading","error","selectAdvertsError","containerRef","useRef","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","showLoadMore","setShowLoadMore","locations","getUniqueLocations","totalPage","selectTotalPages","useEffect","getAdverts","_jsx","Loader","_jsxs","CatalogPageContainer","children","Filter","Wrapper","ref","AdvertList","length","LoadMoreBtn","type","onClick","prevPage","handleScroll","current"],"sourceRoot":""}